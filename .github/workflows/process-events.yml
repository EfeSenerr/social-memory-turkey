name: Process New Event Submission

on:
  issues:
    types: [opened, edited]
  issue_comment:
    types: [created]

permissions:
  issues: write
  contents: write
  pull-requests: write

jobs:
  process-event:
    if: contains(github.event.issue.labels.*.name, 'new-event') || contains(github.event.issue.labels.*.name, 'update-event')
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: |
        cd github-pipeline
        npm install

    - name: Parse and validate event data
      id: parse-event
      run: |
        cd github-pipeline
        node parse-issue.js
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        ISSUE_NUMBER: ${{ github.event.issue.number }}
        ISSUE_BODY: ${{ github.event.issue.body }}
        ISSUE_TITLE: ${{ github.event.issue.title }}
        ISSUE_LABELS: ${{ toJson(github.event.issue.labels) }}

    - name: Create or update event files
      if: steps.parse-event.outputs.valid == 'true'
      run: |
        cd github-pipeline
        node process-event.js
      env:
        EVENT_DATA: ${{ steps.parse-event.outputs.event-data }}
        UPDATE_TYPE: ${{ steps.parse-event.outputs.update-type }}

    - name: Validate JSON files
      if: steps.parse-event.outputs.valid == 'true'
      run: |
        cd github-pipeline
        node validate-json.js

    - name: Create Pull Request
      if: steps.parse-event.outputs.valid == 'true'
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: |
          ${{ steps.parse-event.outputs.commit-message }}
          
          Resolves #${{ github.event.issue.number }}
        title: "${{ steps.parse-event.outputs.pr-title }}"
        body: |
          ## üöÄ Event Submission Processing
          
          This PR was automatically generated from issue #${{ github.event.issue.number }}.
          
          **Event Details:**
          - **Type:** ${{ steps.parse-event.outputs.event-type }}
          - **Date:** ${{ steps.parse-event.outputs.event-date }}
          - **Location:** ${{ steps.parse-event.outputs.event-location }}
          
          **Files Modified:**
          - `public/data/tr_events.json`
          - `public/data/tr_sources.json`
          - `public/data/tr_associations.json`
          - `public/data/tr_api.json`
          
          **Validation Status:** ‚úÖ All JSON files are valid
          
          **Next Steps:**
          1. Review the event details in the issue
          2. Verify sources and information accuracy  
          3. Approve and merge this PR to publish the event
          4. The event will automatically sync to Azure Blob Storage
          
          ---
          *This PR was automatically created by the GitHub pipeline. Manual review is required before merging.*
        branch: event/issue-${{ github.event.issue.number }}
        labels: |
          automated-pr
          event-submission

    - name: Comment on issue - Success
      if: steps.parse-event.outputs.valid == 'true'
      uses: actions/github-script@v7
      with:
        script: |
          const { owner, repo } = context.repo;
          const issue_number = context.issue.number;
          
          await github.rest.issues.createComment({
            owner,
            repo,
            issue_number,
            body: `## ‚úÖ Event Processed Successfully!
            
            Your event submission has been processed and a pull request has been created for review.
            
            **Next Steps:**
            1. üîç **Review Phase**: Maintainers will review your submission
            2. ‚úÖ **Approval**: Once approved, the PR will be merged
            3. üöÄ **Publishing**: The event will be automatically deployed to the live platform
            4. üìß **Notification**: You'll be notified when the event goes live
            
            **Timeline**: Typical review process takes 1-3 business days.
            
            Thank you for contributing to Social Memory Turkey! üáπüá∑`
          });
          
          // Add label to indicate processing is complete
          await github.rest.issues.addLabels({
            owner,
            repo,
            issue_number,
            labels: ['processed', 'awaiting-review']
          });

    - name: Comment on issue - Validation Error
      if: steps.parse-event.outputs.valid == 'false'
      uses: actions/github-script@v7
      with:
        script: |
          const { owner, repo } = context.repo;
          const issue_number = context.issue.number;
          
          await github.rest.issues.createComment({
            owner,
            repo,
            issue_number,
            body: `## ‚ùå Validation Error
            
            There was an issue processing your event submission:
            
            **Error Details:**
            \`\`\`
            ${{ steps.parse-event.outputs.error-message }}
            \`\`\`
            
            **How to Fix:**
            1. Edit this issue to correct the information
            2. Ensure all required fields are filled out correctly
            3. Verify date format is MM/DD/YYYY
            4. Check that coordinates (if provided) are in decimal format
            5. Ensure sources are valid URLs
            
            The automation will re-run when you update the issue. üîÑ`
          });
          
          await github.rest.issues.addLabels({
            owner,
            repo,
            issue_number,
            labels: ['validation-error', 'needs-revision']
          });

  deploy-to-azure:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install Azure CLI
      run: |
        curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

    - name: Login to Azure
      run: |
        az login --service-principal \
          --username ${{ secrets.AZURE_CLIENT_ID }} \
          --password ${{ secrets.AZURE_CLIENT_SECRET }} \
          --tenant ${{ secrets.AZURE_TENANT_ID }}

    - name: Upload data files to Azure Blob Storage
      run: |
        cd github-pipeline
        node upload-to-azure.js
      env:
        AZURE_STORAGE_ACCOUNT: ${{ secrets.AZURE_STORAGE_ACCOUNT }}
        AZURE_STORAGE_KEY: ${{ secrets.AZURE_STORAGE_KEY }}
        
    - name: Comment on merged PR
      if: contains(github.event.head_commit.message, 'Resolves #')
      uses: actions/github-script@v7
      with:
        script: |
          // Extract issue number from commit message
          const commitMessage = context.payload.head_commit.message;
          const issueMatch = commitMessage.match(/Resolves #(\d+)/);
          
          if (issueMatch) {
            const issueNumber = parseInt(issueMatch[1]);
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issueNumber,
              body: `## üéâ Event Successfully Published!
              
              Your event has been successfully added to the Social Memory Turkey platform!
              
              **Status:** ‚úÖ Live on platform
              **URL:** https://efesenerr.github.io/social-memory-turkey/
              **Data Sync:** Completed to Azure Blob Storage
              
              The event is now visible to all users and searchable by date, location, and category.
              
              Thank you for your contribution to documenting important events in Turkey! üáπüá∑`
            });
            
            // Close the issue
            await github.rest.issues.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issueNumber,
              state: 'closed',
              labels: ['completed', 'published']
            });
          }
